#!/bin/bash

# IP FIXO DO NOVO CONTAINER
export var1
# NOME DO COMPARTILHAMENTO E DO CONTAINER!
export var2

# PLACA DE REDE A SER USADA
NETWORKLAN="macvlan"

function checkA {
  [ "$EUID" -ne 0 ] && {
    echo "Execute esse script como Root!"
    exit
    }
}

function checkB {
  export var1; export var2

  [ -f "/srv/containers/$NOMECONTAINER/Information" ] && {
    dialog --title "Dados de $NOMECONTAINER encontrados!" --yesno "Deseja refazer o container?" 6 40
    [ $? = 0 ] && {
    dialog --title "Recriando o container $NOMECONTAINER" --yesno "Deseja reaproveitar os DADOS da instalação anterior?" 6 40
      [ $? = 0 ] && {
        var1=$(sed -n '1p' /srv/containers/$NOMECONTAINER/Information)
        var2=$(sed -n '2p' /srv/containers/$NOMECONTAINER/Information)
        
        [ $(docker stop "$NOMECONTAINER") ] && {
          docker rm "$NOMECONTAINER"

          create
        } || {
          create
        }
        
      } || {
        docker stop "$NOMECONTAINER"
        docker rm "$NOMECONTAINER"
        rm -R /srv/containers/"$NOMECONTAINER"

        menu
        }
    } || {
      echo "A instalação local será mantida! Saindo..."
      exit
    }
  } || {
    menu
    }
}

function menu {
  export var1; export var2

  VALUE1=""; VALUE2=""

  VALUE0=$(dialog --ok-label "Criar" --title "Novo Container" --form "New Samba Share" 10 40 0 \
"Local IP: " 1 1 "$VALUE1" 1 10 20 0 \
"Shr Name:" 2 1 "$VALUE2" 2 10 20 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

  [ $? -ne 0 ] && exit
  var1=$(echo "$VALUE0" | sed -n 1p)
  var2=$(echo "$VALUE0" | sed -n 2p)
  
  [ -z "$var1" ] || [ -z "$var2" ] && {
    dialog --title "ERRO" --msgbox "Não deixe nenhum campo vazio!" 8 40
    menu
  } || {
    create
    }
}

function create {
  export var1; export var2
  
  mkdir -p /srv/containers/"$var2"
  touch /srv/containers/"$var2"/Information
  echo "$var1" > /srv/containers/"$var2"/Information
  echo "$var2" >> /srv/containers/"$var2"/Information

  wget https://codeload.github.com/urbancompasspony/samba_share/zip/refs/heads/main -P /srv/containers/"$var2"
  unzip -d /srv/containers/"$var2" /srv/containers/"$var2"/main

docker run -d \
-h $HOSTNAME \
--ip $var1 \
--name $var2 \
--privileged \
--dns 127.0.0.1 \
--dns 1.1.1.1 \
--restart=unless-stopped \
-v /etc/localtime:/etc/localtime:ro \
--network $NETWORKLAN \
-v /srv/containers/"$var2"/samba_share-main/cache/samba:/var/cache/samba \
-v /srv/containers/"$var2"/samba_share-main/lib/samba:/var/lib/samba \
-v /srv/containers/"$var2"/samba_share-main/log/samba:/var/log/samba \
-v /srv/containers/"$var2"/samba_share-main/run/samba:/run/samba \
-v /srv/containers/"$var2"/samba_share-main/etc:/etc \
-v /mnt:/mnt \
urbancompasspony/migrate-samba:latest
}

function clean {
  unset var1
  unset var2
}

# Start
checkA
checkB
clean

exit
