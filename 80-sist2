#!/bin/bash

NOMECONTAINER="sist2"

docker_repo="simon987/sist2:x64-linux"
imagem="elastic-search-gui"

CustmN2="local_ip"
CustmN3="servidor_dns"
CustmN4="target"
CustmN5="memory"
CustmN6=""
CustmN7=""
CustmN8=""
CustmN9=""
CustmN10=""

VALUE2="0.0.0.0"
VALUE3="8.8.4.4"
VALUE4="/mnt:/host"
VALUE5="4096m"
VALUE6=""
VALUE7=""
VALUE8=""
VALUE9=""
VALUE10=""

export NOMECONTAINER docker_repo imagem
export CustmN2 CustmN3 CustmN4 CustmN5 CustmN6 CustmN7 CustmN8 CustmN9 CustmN10
export VALUE2 VALUE3 VALUE4 VALUE5 VALUE6 VALUE7 VALUE8 VALUE9 VALUE10

if [ -f /tmp/common-functions.sh ]; then
  source /tmp/common-functions.sh
else
  echo "ERRO: common-functions.sh nÃ£o encontrado!"
  exit 1
fi

function set_mkdir {
  sudo mkdir -p /srv/containers/"$NOMECONTAINER"/data
  # sudo touch /srv/containers/"$NOMECONTAINER"/file
  # sudo chmod -R 777 /srv/containers/"$NOMECONTAINER"
:; }

function docker_create {
  local ip_regex="^([0-9]{1,3}\.){3}[0-9]{1,3}$"

  # Se NAO for numerico, execute como host!
  if [[ ! "$VALUE2" =~ $ip_regex ]]; then

    docker run -d --name="$NOMECONTAINER" --hostname="$NOMECONTAINER" \
    --network host \
    --no-healthcheck --restart=unless-stopped -v /etc/localtime:/etc/localtime:ro \
    -p 4090:4090 -p 8080:8080 \
    -m "$VALUE5" \
    -w /root/sist2-admin/ \
    -v /etc/localtime:/etc/localtime:ro \
    -v "$VALUE4" \
    -v /srv/containers/"$NOMECONTAINER"/data:/sist2-admin/ \
    --entrypoint python3 $docker_repo /root/sist2-admin/sist2_admin/app.py

    return
  fi

  docker run -d --name="$NOMECONTAINER" --hostname="$NOMECONTAINER" \
  --network macvlan --ip="$VALUE2" --dns="$VALUE3" \
  --no-healthcheck --restart=unless-stopped -v /etc/localtime:/etc/localtime:ro \
  -m "$VALUE5" \
  -w /root/sist2-admin/ \
  -v /etc/localtime:/etc/localtime:ro \
  -v "$VALUE4" \
  -v /srv/containers/"$NOMECONTAINER"/data:/sist2-admin/ \
  --entrypoint python3 $docker_repo /root/sist2-admin/sist2_admin/app.py
}

function docker_extras {
#docker exec "$NOMECONTAINER" bash -c "echo 'parameter=0' >> /etc/custom.conf"
#docker restart "$NOMECONTAINER"
:; }

execute_main

exit 0
