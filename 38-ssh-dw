#!/bin/bash

# NOME DO NOVO CONTAINER
export NOMECONTAINER="ssh-dw"

function checkA {
  [ "$EUID" -ne 0 ] && {
    echo "Execute esse script como Root!"
    exit
    }
}

function checkB {
  export NOMECONTAINER

  [ -f "/srv/containers/$NOMECONTAINER/Information" ] && {
    dialog --title "Dados de $NOMECONTAINER encontrados!" --yesno "Deseja refazer o container?" 6 40
    [ $? = 0 ] && {
    dialog --title "Recriando o container $NOMECONTAINER" --yesno "Deseja reaproveitar os DADOS da instalação anterior?" 6 40
      [ $? = 0 ] && {
        NOMECONTAINER=$(sed -n '1p' /srv/containers/$NOMECONTAINER/Information)
        
        [ $(docker stop "$NOMECONTAINER") ] && {
          docker rm "$NOMECONTAINER"

          create
        } || {
          create
        }
        
      } || {
        docker stop "$NOMECONTAINER"
        docker rm "$NOMECONTAINER"
        
        datetime=$(date +"%d-%m %H-%M")
        mkdir -p /srv/containers/.backupcnt
        zip "/srv/containers/.backupcnt/$NOMECONTAINER-$datetime.zip" -r /srv/containers/$NOMECONTAINER
        
        rm -iR /srv/containers/"$NOMECONTAINER"

        create
        }
    } || {
      echo "A instalação local será mantida! Saindo..."
      exit
    }
  } || {
    create
    }
}

function menu {
  export NOMECONTAINER

  VALUE1="ssh-dw"

  VALUE0=$(dialog --ok-label "Criar" --title "Novo Container" --form "Container: $NOMECONTAINER" 8 30 0 \
"Set Name: " 1 1 "$VALUE1" 1 10 20 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

  [ $? -ne 0 ] && exit
  NOMECONTAINER=$(echo "$VALUE0" | sed -n 1p)
  
  [ -z "$NOMECONTAINER" ] && {
    dialog --title "ERRO" --msgbox "Não deixe nenhum campo vazio!" 8 40
    menu
  } || {
    checkB
    }
}

function create {
  export NOMECONTAINER

  mkdir -p /srv/containers/"$NOMECONTAINER"/dws
  touch /srv/containers/"$NOMECONTAINER"/Information
  echo "$NOMECONTAINER" > /srv/containers/"$NOMECONTAINER"/Information

docker run -d --privileged \
  --name=$NOMECONTAINER \
  --network host \
  --no-healthcheck \
  --restart unless-stopped \
  --hostname=$NOMECONTAINER \
  --add-host=host.docker.internal:host-gateway \
  -v /etc/localtime:/etc/localtime:ro \
  -v /srv/containers/"$NOMECONTAINER"/dwservice:/usr/share/dwagent \
  urbancompasspony/ssh-dw:latest
}

function clean {
  unset NOMECONTAINER
}

# Start
checkA
menu
clean

echo " "
echo "When running DWService.sh for the first time, set destination dir on /usr/share/dwagent/dw!"
echo " "

exit 1
