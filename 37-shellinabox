#!/bin/bash

# Global config for replication:
export NOMECONTAINER="shellinabox"

# PORTA DO ACESSO WEB - PADRÃO 4200
export var1
# USUARIO, GRUPO e HOME PADRÃO
export var2
# SENHA WEB
export var3

function checkA {
  [ "$EUID" -ne 0 ] && {
    echo "Execute esse script como Root!"
    exit
    }
}

function checkB {
  export var1; export var2; export var3

  [ -f "/srv/containers/$NOMECONTAINER/Information" ] && {
    dialog --title "Dados de $NOMECONTAINER encontrados!" --yesno "Deseja refazer o container?" 6 40
    [ $? = 0 ] && {
    dialog --title "Recriando o container $NOMECONTAINER" --yesno "Deseja reaproveitar os DADOS da instalação anterior?" 6 40
      [ $? = 0 ] && {
        var1=$(sed -n '1p' /srv/containers/$NOMECONTAINER/Information)
        var2=$(sed -n '2p' /srv/containers/$NOMECONTAINER/Information)
        var3=$(sed -n '3p' /srv/containers/$NOMECONTAINER/Information)
        
        [ $(docker stop "$NOMECONTAINER") ] && {
          docker rm "$NOMECONTAINER"

          create
        } || {
          create
        }
        
      } || {
        docker stop "$NOMECONTAINER"
        docker rm "$NOMECONTAINER"
        
        datetime=$(date +"%d-%m %H-%M")
        mkdir -p /srv/containers/.backupcnt
        zip "/srv/containers/.backupcnt/$NOMECONTAINER-$datetime.zip" -r /srv/containers/$NOMECONTAINER
        
        rm -iR /srv/containers/"$NOMECONTAINER"

        menu
        }
    } || {
      echo "A instalação local será mantida! Saindo..."
      exit
    }
  } || {
    menu
    }
}

function menu {
  export var1; export var2; export var3

  VALUE1="4200"; VALUE2="siab"; VALUE3="pass_here"

  VALUE0=$(dialog --ok-label "Criar" --title "Novo Container" --form "Container: $NOMECONTAINER" 10 40 0 \
"Web Port:" 1 1 "$VALUE1" 1 10 20 0 \
"Web User:" 2 1 "$VALUE2" 2 10 20 0 \
"Web Pass:" 3 1 "$VALUE3" 3 10 20 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

  [ $? -ne 0 ] && exit
  var1=$(echo "$VALUE0" | sed -n 1p)
  var2=$(echo "$VALUE0" | sed -n 2p)
  var3=$(echo "$VALUE0" | sed -n 3p)
  
  [ -z "$var1" ] || [ -z "$var2" ] || [ -z "$var3" ] && {
    dialog --title "ERRO" --msgbox "Não deixe nenhum campo vazio!" 8 40
    menu
  } || {
    create
    }
}

function create {
  export var1; export var2; export var3
  
  mkdir -p /srv/containers/"$NOMECONTAINER"
  touch /srv/containers/"$NOMECONTAINER"/Information
  echo "$var1" > /srv/containers/"$NOMECONTAINER"/Information
  echo "$var2" >> /srv/containers/"$NOMECONTAINER"/Information
  echo "$var3" >> /srv/containers/"$NOMECONTAINER"/Information

  docker run -d \
--name="$NOMECONTAINER" \
--hostname="$NOMECONTAINER" \
--dns=1.1.1.1  \
--dns=127.0.0.1 \
--no-healthcheck \
-p 4200:4200 \
-e SIAB_PORT="$var1" \
-e SIAB_USER="$var2" \
-e SIAB_GROUP="$var2" \
-e SIAB_PASSWORD="$var3" \
-e SIAB_HOME=/home/"$var2" \
-e SIAB_SUDO=true \
-v /etc/localtime:/etc/localtime:ro \
--restart=unless-stopped \
--add-host=host.docker.internal:host-gateway \
sspreitzer/shellinabox:latest
}

#-e SIAB_SSL=false \
#--network macvlan \
#--ip="$var1" \

function clean {
  unset var1
  unset var2
  unset var3
}

# Start
checkA
checkB
clean

exit 1





#!/bin/bash

# Global config for replication:
export NOMECONTAINER="shellinabox"

# IP FIXO DO NOVO CONTAINER
export var1
# PORTA DO ACESSO WEB - PADRÃO 4200
export var2
# USUARIO, GRUPO e HOME PADRÃO
export var3
# SENHA WEB
export var4

function checkA {
  [ "$EUID" -ne 0 ] && {
    echo "Execute esse script como Root!"
    exit
    }
}

function checkB {
  export var1; export var2; export var3; export var4

  [ -f "/srv/containers/$NOMECONTAINER/Information" ] && {
    dialog --title "Dados de $NOMECONTAINER encontrados!" --yesno "Deseja refazer o container?" 6 40
    [ $? = 0 ] && {
    dialog --title "Recriando o container $NOMECONTAINER" --yesno "Deseja reaproveitar os DADOS da instalação anterior?" 6 40
      [ $? = 0 ] && {
        var1=$(sed -n '1p' /srv/containers/$NOMECONTAINER/Information)
        var2=$(sed -n '2p' /srv/containers/$NOMECONTAINER/Information)
        var3=$(sed -n '3p' /srv/containers/$NOMECONTAINER/Information)
        var4=$(sed -n '4p' /srv/containers/$NOMECONTAINER/Information)
        
        [ $(docker stop "$NOMECONTAINER") ] && {
          docker rm "$NOMECONTAINER"

          create
        } || {
          create
        }
        
      } || {
        docker stop "$NOMECONTAINER"
        docker rm "$NOMECONTAINER"
        
        datetime=$(date +"%d-%m %H-%M")
        mkdir -p /srv/containers/.backupcnt
        zip "/srv/containers/.backupcnt/$NOMECONTAINER-$datetime.zip" -r /srv/containers/$NOMECONTAINER
        
        rm -iR /srv/containers/"$NOMECONTAINER"

        menu
        }
    } || {
      echo "A instalação local será mantida! Saindo..."
      exit
    }
  } || {
    menu
    }
}

function menu {
  export var1; export var2; export var3; export var4

  VALUE1=""; VALUE2="4200"; VALUE3="siab"; VALUE4="password"

  VALUE0=$(dialog --ok-label "Criar" --title "Novo Container" --form "Container: $NOMECONTAINER" 12 40 0 \
"Local IP: " 1 1 "$VALUE1" 1 10 20 0 \
"Web Port:" 2 1 "$VALUE2" 2 10 20 0 \
"Web User:" 3 1 "$VALUE3" 3 10 20 0 \
"Web Pass:" 4 1 "$VALUE4" 4 10 20 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

  [ $? -ne 0 ] && exit
  var1=$(echo "$VALUE0" | sed -n 1p)
  var2=$(echo "$VALUE0" | sed -n 2p)
  var3=$(echo "$VALUE0" | sed -n 3p)
  var4=$(echo "$VALUE0" | sed -n 4p)
  
  [ -z "$var1" ] || [ -z "$var2" ] || [ -z "$var3" ] || [ -z "$var4" ] && {
    dialog --title "ERRO" --msgbox "Não deixe nenhum campo vazio!" 8 40
    menu
  } || {
    checkC
    }
}

function checkC {
  #IPMachine=$(hostname -I | awk '{print $1}')
  MyIP=$(cat /srv/containers/scripts/myip)
  [ "$MyIP" = "$var1" ] && {
    dialog --title "ERRO" --msgbox "Conflito de IP detectado! \nMude para outro IP." 6 40
    menu
  } || {
    create
  }
}

function create {
  export var1; export var2; export var3; export var4
  
  mkdir -p /srv/containers/"$NOMECONTAINER"
  touch /srv/containers/"$NOMECONTAINER"/Information
  echo "$var1" > /srv/containers/"$NOMECONTAINER"/Information
  echo "$var2" >> /srv/containers/"$NOMECONTAINER"/Information
  echo "$var3" >> /srv/containers/"$NOMECONTAINER"/Information
  echo "$var4" >> /srv/containers/"$NOMECONTAINER"/Information
    
  docker run -d \
--name="$NOMECONTAINER" \
--hostname="$NOMECONTAINER" \
--network macvlan \
--ip="$var1" \
--dns=1.1.1.1  \
--dns=127.0.0.1 \
--no-healthcheck \
-e SIAB_PORT="$var2" \
-e SIAB_USER="$var3" \
-e SIAB_GROUP="$var3" \
-e SIAB_PASSWORD="$var4" \
-e SIAB_HOME=/home/"$var2" \
-e SIAB_SUDO=true \
-e SIAB_SSL=false \
-v /etc/localtime:/etc/localtime:ro \
-v "$PWD"/dev:/usr/src/dev \
--restart=unless-stopped \
--add-host=host.docker.internal:host-gateway \
sspreitzer/shellinabox:latest
}

#
#-p 4200:4200 \

function clean {
  unset var1
  unset var2
  unset var3
  unset var4
}

# Start
checkA
checkB
clean

exit 1
