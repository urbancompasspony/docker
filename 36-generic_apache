#!/bin/bash

# Global config for replication:
export NOMECONTAINER="generic_apache"

# IP FIXO DO NOVO CONTAINER
export var1
export var2

function checkA {
  [ "$EUID" -ne 0 ] && {
    echo "Execute esse script como Root!"
    exit
    }
}

function checkB {
  export var1

  [ -f "/srv/containers/$NOMECONTAINER/Information" ] && {
    dialog --title "Dados de $NOMECONTAINER encontrados!" --yesno "Deseja refazer o container?" 6 40
    [ $? = 0 ] && {
    dialog --title "Recriando o container $NOMECONTAINER" --yesno "Deseja reaproveitar os DADOS da instalação anterior?" 6 40
      [ $? = 0 ] && {
        var1=$(sed -n '1p' /srv/containers/$NOMECONTAINER/Information)
        var2=$(sed -n '2p' /srv/containers/$NOMECONTAINER/Information)
        
        [ $(docker stop "$NOMECONTAINER") ] && {
          docker rm "$NOMECONTAINER"

          create
        } || {
          create
        }
        
      } || {
        docker stop "$NOMECONTAINER"
        docker rm "$NOMECONTAINER"
        
        datetime=$(date +"%d-%m %H-%M")
        mkdir -p /srv/containers/.backupcnt
        zip "/srv/containers/.backupcnt/$NOMECONTAINER-$datetime.zip" -r /srv/containers/$NOMECONTAINER
        
        rm -iR /srv/containers/"$NOMECONTAINER"

        menu
        }
    } || {
      echo "A instalação local será mantida! Saindo..."
      exit
    }
  } || {
    menu
    }
}

function menu {
  export var1; export var2

  VALUE1=""; VALUE2=""

  VALUE0=$(dialog --ok-label "Criar" --title "Novo Container" --form "Container: $NOMECONTAINER" 10 40 0 \
"NameCont: " 1 1 "$VALUE1" 1 10 20 0 \
"Local IP: " 2 1 "$VALUE2" 2 10 20 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

  [ $? -ne 0 ] && exit
  NOMECONTAINER=$(echo "$VALUE0" | sed -n 1p)
  var1=$(echo "$VALUE0" | sed -n 2p)

  [ -z "$var1" ] || [ -z "$NOMECONTAINER" ] && {
    dialog --title "ERRO" --msgbox "Não deixe nenhum campo vazio!" 8 40
    menu
  } || {
    checkC
    }
}

function checkC {
  #IPMachine=$(hostname -I | awk '{print $1}')
  MyIP=$(cat /srv/containers/scripts/myip)
  [ "$MyIP" = "$var1" ] && {
    dialog --title "ERRO" --msgbox "Conflito de IP detectado! \nMude para outro IP." 6 40
    menu
  } || {
    create
  }
}

function create {
  export var1
  
  mkdir -p /srv/containers/"$NOMECONTAINER"
  touch /srv/containers/"$NOMECONTAINER"/Information
  echo "$var1" > /srv/containers/"$NOMECONTAINER"/Information

  docker run -d \
--name=$NOMECONTAINER \
--network macvlan \
--ip=$var1 \
--dns=1.1.1.1  \
--dns=127.0.0.1 \
--hostname=httpd \
--no-healthcheck \
-v /etc/localtime:/etc/localtime:ro \
-v /srv/containers/"$NOMECONTAINER"/Data/:/usr/local/apache2/htdocs/ \
--restart=unless-stopped \
httpd:2.4

dialog --title "Definir Usuario e Senha!" --yesno "Deseja proteger o acesso?" 6 40
  [ $? = 0 ] && {
    VALUE10=$(dialog --ok-label "Definir" --title "Novo Usuario e Senha" --form "Container: $NOMECONTAINER" 9 40 0 \
"Username: " 1 1 "$VALUE1" 1 11 30 0 \
"Password: " 2 1 "$VALUE2" 2 11 30 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)
    [ $? -ne 0 ] && exit
    username=$(echo "$VALUE10" | sed -n 1p)
    password=$(echo "$VALUE10" | sed -n 2p)

    docker exec $NOMECONTAINER apt update
    docker exec $NOMECONTAINER apt install nano wget -y
    docker exec $NOMECONTAINER touch .htpasswd
    docker exec $NOMECONTAINER bash -c "wget https://raw.githubusercontent.com/urbancompasspony/docker/main/Apache2/Password/httpd.conf -O /usr/local/apache2/conf/httpd.conf"
    docker exec $NOMECONTAINER bash -c "echo $password | tee /usr/local/apache2/webpass"
    docker exec $NOMECONTAINER bash -c "htpasswd -c -i .htpasswd $username < /usr/local/apache2/webpass"
    docker restart $NOMECONTAINER
  } || {
    echo "Tudo ok!"
  }
}

function clean {
  unset var1
  unset var2
}

# Start
checkA
checkB
clean

exit 0
