#!/bin/bash

# TODO: HOW TO CHANGE /VAR/LIB/MYSQL TO ANOTHER DIR!

# Global config for replication:
export NOMECONTAINER="mysql"

# IP FIXO DO NOVO CONTAINER
export var1
# NOVA SENHA DO ROOT MYSQL
export var2
# NOVO BANCO DE DADOS
export var3
# USUARIO BANCO DE DADOS
export var4
# SENHA DO BANCO DE DADOS
export var5

function checkA {
  [ "$EUID" -ne 0 ] && {
    echo "Execute esse script como Root!"
    exit
    }
}

function checkB {
  export var1; export var2

  [ -f "/srv/containers/$NOMECONTAINER/Information" ] && {
    dialog --title "Dados de $NOMECONTAINER encontrados!" --yesno "Deseja refazer o container?" 6 40
    [ $? = 0 ] && {
    dialog --title "Recriando o container $NOMECONTAINER" --yesno "Deseja reaproveitar os DADOS da instalação anterior?" 6 40
      [ $? = 0 ] && {
        var1=$(sed -n '1p' /srv/containers/$NOMECONTAINER/Information)
        var2=$(sed -n '2p' /srv/containers/$NOMECONTAINER/Information)
        var3=$(sed -n '3p' /srv/containers/$NOMECONTAINER/Information)
        var4=$(sed -n '4p' /srv/containers/$NOMECONTAINER/Information)
        var5=$(sed -n '5p' /srv/containers/$NOMECONTAINER/Information)
        
        [ $(docker stop "$NOMECONTAINER") ] && {
          docker rm "$NOMECONTAINER"

          create
        } || {
          create
        }
        
      } || {
        docker stop "$NOMECONTAINER"
        docker rm "$NOMECONTAINER"
        
        datetime=$(date +"%d-%m %H-%M")
        mkdir -p /srv/containers/.backupcnt
        zip "/srv/containers/.backupcnt/$NOMECONTAINER-$datetime.zip" -r /srv/containers/$NOMECONTAINER
        
        rm -R /srv/containers/"$NOMECONTAINER"

        menu
        }
    } || {
      echo "A instalação local será mantida! Saindo..."
      exit
    }
  } || {
    menu
    }
}

function menu {
  export var1; export var2

  VALUE1=""; VALUE2=""; VALUE3="nextcloud"; VALUE4="nextcloud"; VALUE5=""

  VALUE0=$(dialog --ok-label "Criar" --title "Novo Container" --form "Container: $NOMECONTAINER" 13 40 0 \
"Local IP:" 1 1 "$VALUE1" 1 10 20 0 \
"MySQL PW:" 2 1 "$VALUE2" 2 10 20 0 \
"DataBase:" 3 1 "$VALUE3" 3 10 20 0 \
"DB User :" 4 1 "$VALUE4" 4 10 20 0 \
"DB Pass :" 5 1 "$VALUE5" 5 10 20 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

  [ $? -ne 0 ] && exit
  var1=$(echo "$VALUE0" | sed -n 1p)
  var2=$(echo "$VALUE0" | sed -n 2p)
  var3=$(echo "$VALUE0" | sed -n 3p)
  var4=$(echo "$VALUE0" | sed -n 4p)
  var5=$(echo "$VALUE0" | sed -n 5p)
  
  [ -z "$var1" ] || [ -z "$var2" ] || [ -z "$var3" ] || [ -z "$var4" ] || [ -z "$var5" ] && {
    dialog --title "ERRO" --msgbox "Não deixe nenhum campo vazio!" 8 40
    menu
  } || {
    create
    }
}

function create {
  export var1; export var2; export var3; export var4; export var5
  
  mkdir -p /srv/containers/"$NOMECONTAINER"
  touch /srv/containers/"$NOMECONTAINER"/Information
  echo "$var1" > /srv/containers/"$NOMECONTAINER"/Information
  echo "$var2" >> /srv/containers/"$NOMECONTAINER"/Information
  echo "$var3" >> /srv/containers/"$NOMECONTAINER"/Information
  echo "$var4" >> /srv/containers/"$NOMECONTAINER"/Information
  echo "$var5" >> /srv/containers/"$NOMECONTAINER"/Information

  docker run -d \
  --name mysql \
  --ip=$var1 \
  --network macvlan \
  --hostname=mysql \
  --restart=unless-stopped \
  --no-healthcheck \
  -p 80:80 \
  -v /etc/localtime:/etc/localtime:ro \
  -e MYSQL_ROOT_PASSWORD="$var2" \
  -e MYSQL_DATABASE="$var3" \
  -e MYSQL_USER="$var4" \
  -e MYSQL_PASSWORD="$var5" \
  mysql:8
}

function clean {
  unset var1
  unset var2
  unset var3
  unset var4
  unset var5
}

# Start
checkA
checkB
clean

docker network connect bridge mysql

echo "Finalizado!"
echo "Aguarde aproximadamente 2 minutos para início do banco de dados."
echo "Localização padrão em: /var/lib/mysql"

exit
