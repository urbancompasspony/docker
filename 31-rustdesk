#!/bin/bash

NOMECONTAINER="RustDesk"

# IP FIXO DO hbbs
export var1
# IP FIXO DO hbbr
export var2
# Endereço Web do Servidor
export var3

function checkA {
  [ "$EUID" -ne 0 ] && {
    echo "Execute esse script como Root!"
    exit
    }
}

function checkB {
  export var1; export var2; export var3

  [ -f "/srv/containers/$NOMECONTAINER/Information" ] && {
    dialog --title "Dados de $NOMECONTAINER encontrados!" --yesno "Deseja refazer os containers?" 6 40
    [ $? = 0 ] && {
    dialog --title "Recriando o container $NOMECONTAINER" --yesno "Deseja reaproveitar os DADOS da instalação anterior?" 6 40
      [ $? = 0 ] && {
          var1=$(sed -n '1p' /srv/containers/$NOMECONTAINER/Information)
          var2=$(sed -n '2p' /srv/containers/$NOMECONTAINER/Information)
          var3=$(sed -n '3p' /srv/containers/$NOMECONTAINER/Information)

          docker stop hbbs
          docker stop hbbr
          docker rm hbbs
          docker rm hbbr

          create

      } || {
        docker stop hbbs
        docker stop hbbr
        docker rm hbbs
        docker rm hbbr
        
        datetime=$(date +"%d-%m %H-%M")
        mkdir -p /srv/containers/.backupcnt
        zip "/srv/containers/.backupcnt/$NOMECONTAINER-$datetime.zip" -r /srv/containers/$NOMECONTAINER

        rm -iR /srv/containers/"$NOMECONTAINER"

        menu
        }
    } || {
      echo "A instalação local será mantida! Saindo..."
      exit
    }
  } || {
    menu
    }
}

function menu {
  export var1; export var2; export var3

  VALUE1=""; VALUE2=""; VALUE3=""

  VALUE0=$(dialog --ok-label "Criar" --title "Novo Container" --form "Container: $NOMECONTAINER" 10 40 0 \
"HBBS IP: " 1 1 "$VALUE1" 1 10 20 0 \
"HBBR IP: " 2 1 "$VALUE2" 2 10 20 0 \
"Dyn DNS: " 3 1 "$VALUE3" 3 10 50 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

  [ $? -ne 0 ] && exit
  var1=$(echo "$VALUE0" | sed -n 1p)
  var2=$(echo "$VALUE0" | sed -n 2p)
  var3=$(echo "$VALUE0" | sed -n 3p)
  
  [ -z "$var1" ] || [ -z "$var2" ] || [ -z "$var3" ] && {
    dialog --title "ERRO" --msgbox "Não deixe nenhum campo vazio!" 8 40
    menu
  } || {
    checkC
    }
}

function checkC {
  #IPMachine=$(hostname -I | awk '{print $1}')
  MyIP=$(cat /srv/containers/scripts/myip)
  [ "$MyIP" = "$var1" ] && {
    dialog --title "ERRO" --msgbox "Conflito de IP detectado! \nMude para outro IP." 6 40
    menu
  } || {
    create
  }
}

function create {
  export var1; export var2; export var3
  
  mkdir -p /srv/containers/"$NOMECONTAINER"/HBBS
  mkdir -p /srv/containers/"$NOMECONTAINER"/HBBR
  touch /srv/containers/"$NOMECONTAINER"/Information
  echo "$var1" > /srv/containers/"$NOMECONTAINER"/Information
  echo "$var2" >> /srv/containers/"$NOMECONTAINER"/Information
  echo "$var3" >> /srv/containers/"$NOMECONTAINER"/Information
  
docker run -d \
  --name="hbbs" \
  --network macvlan \
  --ip="$var1" \
  --dns=1.1.1.1  \
  --dns=127.0.0.1 \
  --no-healthcheck \
  --restart unless-stopped \
  --no-healthcheck \
  -v /etc/localtime:/etc/localtime:ro \
  -v /srv/containers/"$NOMECONTAINER"/HBBS:/root \
  -p 21115:21115 \
  -p 21116:21116 \
  -p 21116:21116/udp \
  -p 21118:21118 \
  rustdesk/rustdesk-server \
  hbbs -r "$var3" -k _

docker run -d \
  --name="hbbr" \
  --network macvlan \
  --ip="$var2" \
  --dns=1.1.1.1  \
  --dns=127.0.0.1 \
  --no-healthcheck \
  --restart unless-stopped \
  --no-healthcheck \
  -v /etc/localtime:/etc/localtime:ro \
  -v /srv/containers/"$NOMECONTAINER"/HBBR:/root \
  -p 21117:21117 \
  -p 21119:21119 \
  rustdesk/rustdesk-server \
  hbbr -k _
  }

# Start
checkA
checkB

# Adjusting Keys!
docker stop hbbs
docker stop hbbr

sudo rsync -a /srv/containers/"$NOMECONTAINER"/HBBS/ /srv/containers/"$NOMECONTAINER"/HBBR/

docker start hbbr
docker start hbbs

unset var1
unset var2
unset var3

exit 1
