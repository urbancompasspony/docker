#!/bin/bash

[ "$EUID" -ne 0 ] && {
  echo "Execute esse script como Root!"
  exit
  }

VALUE1=""; VALUE2=""; VALUE3="$(whoami)"

VALUE0=$(dialog --ok-label "Criar" --title "Container" --form "PiHole" 15 50 0 \
"Local IP: " 1 1 "$VALUE1" 1 10 34 0 \
"Web Pass:" 2 1 "$VALUE2" 2 10 34 0 \
"HostUser:" 3 1 "$VALUE3" 3 10 34 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)
[ $? -ne 0 ] && m10
IP1=$(echo "$VALUE0" | sed -n 1p)
pass2=$(echo "$VALUE0" | sed -n 2p)
user2=$(echo "$VALUE0" | sed -n 3p)

[ -z "$IP1" ] || [ -z "$user2" ] || [ -z "$pass2" ] && {
  dialog --title "ERRO" --msgbox "Não deixe nenhum campo vazio!" 8 40
  curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/main/orchestration | bash
} || {

# IP FIXO DO NOVO CONTAINER
LOCALIP="$IP1"
# SENHA PARA O PIHOLE
MYPASSWORD="$pass2"
# USUARIO DO HOST
USERNAME="$user2"

mkdir -p /home/"$USERNAME"/.CONTAINERS/pihole

[ -d "/home/"$USERNAME"/.CONTAINERS/pihole/Information" ] && {
  dialog --title "Container do PiHole encontrado!" --yesno "Deseja remover o container?" 6 40
  [ $? = 0 ] && {
    docker rm pihole
  }||{
    echo "Instalação local será mantida!"
    curl -sSL https://raw.githubusercontent.com/urbancompasspony/server/main/orchestration | bash
  }
} || {
touch /home/"$USERNAME"/.CONTAINERS/pihole/Information
echo " " > /home/"$USERNAME"/.CONTAINERS/pihole/Information
echo "IP FIXO DO NOVO CONTAINER: $IP1" >> /home/"$USERNAME"/.CONTAINERS/pihole/Information
echo "SENHA WEB DO PIHOLE: $pass2" >> /home/"$USERNAME"/.CONTAINERS/pihole/Information
echo "USUARIO DO HOST: $user2" >> /home/"$USERNAME"/.CONTAINERS/pihole/Information

docker run -d \
--name=pihole \
--network macvlan \
--ip=$LOCALIP \
--dns=1.1.1.1  \
--dns=127.0.0.1 \
--hostname=pi.hole \
-e SERVERIP=$LOCALIP \
-e WEBPASSWORD=$MYPASSWORD \
-v /etc/localtime:/etc/localtime:ro \
-v /home/"$USERNAME"/.CONTAINERS/pihole/pihole/:/etc/pihole \
-v /home/"$USERNAME"/.CONTAINERS/pihole/dnsmasq.d/:/etc/dnsmasq.d \
-p 80:80 \
-p 443:443 \
-p 67:67/tcp \
-p 67:67/udp \
-p 53:53/tcp \
-p 53:53/udp \
--restart=unless-stopped \
pihole/pihole:latest

docker start pihole
docker exec -it pihole rm /etc/pihole/pihole-FTL.conf
docker exec -it pihole touch /etc/pihole/pihole-FTL.conf
docker exec -it pihole bash -c "echo 'LOCAL_IPV4=0.0.0.0' >> /etc/pihole/pihole-FTL.conf"
docker exec -it pihole bash -c "echo 'RATE_LIMIT=0/0' >> /etc/pihole/pihole-FTL.conf"
docker restart pihole

  }
}
