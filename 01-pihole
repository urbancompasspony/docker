#!/bin/bash

export NOMECONTAINER="PiHole"

export USERNAME; export IP1; export pass2; export user2; export LOCALIP; export MYPASSWORD

function checkA {
  [ "$EUID" -ne 0 ] && {
    echo "Execute esse script como Root!"
    exit
    }
}

function menu {
  export USERNAME; export IP1; export pass2; export user2; export LOCALIP; export MYPASSWORD

  VALUE1=""; VALUE2=""; VALUE3=""

  VALUE0=$(dialog --ok-label "Criar" --title "Container" --form "Container: $NOMECONTAINER" 15 50 0 \
"Local IP: " 1 1 "$VALUE1" 1 10 34 0 \
"Web Pass:" 2 1 "$VALUE2" 2 10 34 0 \
"HostUser:" 3 1 "$VALUE3" 3 10 34 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

  [ $? -ne 0 ] && exit

  IP1=$(echo "$VALUE0" | sed -n 1p)
  pass2=$(echo "$VALUE0" | sed -n 2p)
  user2=$(echo "$VALUE0" | sed -n 3p)
  
  # IP FIXO DO NOVO CONTAINER
  LOCALIP=$IP1
  # SENHA PARA O PIHOLE
  MYPASSWORD=$pass2
  # USUARIO DO HOST
  USERNAME=$user2
  
  [ -z "$IP1" ] || [ -z "$user2" ] || [ -z "$pass2" ] && {
  dialog --title "ERRO" --msgbox "Não deixe nenhum campo vazio!" 8 40
  menu
  }
}

function checkB {
  export USERNAME; export IP1; export pass2; export user2; export LOCALIP; export MYPASSWORD

  [ -f "/home/$USERNAME/.CONTAINERS/pihole/Information" ] && {
    dialog --title "Container $NOMECONTAINER já existe!" --yesno "Deseja remover o container?" 6 40
    [ $? = 0 ] && {
      docker stop pihole
      docker rm pihole
      rm -R /home/"$USERNAME"/.CONTAINERS/pihole
      mkdir -p /home/"$USERNAME"/.CONTAINERS/pihole
    } || {
      echo "A instalação local será mantida!"
      exit
    }
  }
}

function create {
  export USERNAME; export IP1; export pass2; export user2; export LOCALIP; export MYPASSWORD
  
  mkdir -p /home/"$USERNAME"/.CONTAINERS/pihole
  touch /home/"$USERNAME"/.CONTAINERS/pihole/Information
  echo "Local IP: $IP1" > /home/"$USERNAME"/.CONTAINERS/pihole/Information
  echo "Web Pass: $pass2" >> /home/"$USERNAME"/.CONTAINERS/pihole/Information
  echo "HostUser: $user2" >> /home/"$USERNAME"/.CONTAINERS/pihole/Information

  docker run -d \
--name=pihole \
--network macvlan \
--ip=$LOCALIP \
--dns=1.1.1.1  \
--dns=127.0.0.1 \
--hostname=pi.hole \
-e SERVERIP=$LOCALIP \
-e WEBPASSWORD=$MYPASSWORD \
-v /etc/localtime:/etc/localtime:ro \
-v /home/"$USERNAME"/.CONTAINERS/pihole/pihole/:/etc/pihole \
-v /home/"$USERNAME"/.CONTAINERS/pihole/dnsmasq.d/:/etc/dnsmasq.d \
-p 80:80 \
-p 443:443 \
-p 67:67/tcp \
-p 67:67/udp \
-p 53:53/tcp \
-p 53:53/udp \
--restart=unless-stopped \
pihole/pihole:latest

  docker start pihole
  docker exec -it pihole rm /etc/pihole/pihole-FTL.conf
  docker exec -it pihole touch /etc/pihole/pihole-FTL.conf
  docker exec -it pihole bash -c "echo 'LOCAL_IPV4=0.0.0.0' >> /etc/pihole/pihole-FTL.conf"
  docker exec -it pihole bash -c "echo 'RATE_LIMIT=0/0' >> /etc/pihole/pihole-FTL.conf"
  docker restart pihole
}

function clean {
  # This will clean all personal data!
  unset USERNAME
  unset IP1
  unset pass2
  unset user2
  unset LOCALIP
  unset MYPASSWORD
}

# Start
checkA
menu
checkB
create
clean

exit
