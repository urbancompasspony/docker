#!/bin/bash

# Global config for replication:
export NOMECONTAINER="ntfy"

# IP FIXO DO NOVO CONTAINER
export var1

function checkA {
  [ "$EUID" -ne 0 ] && {
    echo "Execute esse script como Root!"
    exit
    }
}

function checkB {
  export var1

  [ -f "/srv/containers/$NOMECONTAINER/Information" ] && {
    dialog --title "Dados de $NOMECONTAINER encontrados!" --yesno "Deseja refazer o container?" 6 40
    [ $? = 0 ] && {
    dialog --title "Recriando o container $NOMECONTAINER" --yesno "Deseja reaproveitar os DADOS da instalação anterior?" 6 40
      [ $? = 0 ] && {
        var1=$(sed -n '1p' /srv/containers/$NOMECONTAINER/Information)

        [ $(docker stop "$NOMECONTAINER") ] && {
          docker rm "$NOMECONTAINER"

          create
        } || {
          create
        }

      } || {
        docker stop "$NOMECONTAINER"
        docker rm "$NOMECONTAINER"
        datetime=$(date +"%d-%m %H-%M")
        mkdir -p /srv/containers/.backupcnt
        zip "/srv/containers/.backupcnt/$NOMECONTAINER-$datetime.zip" -r /srv/containers/$NOMECONTAINER

        rm -R /srv/containers/"$NOMECONTAINER"

        menu
        }
    } || {
      echo "A instalação local será mantida! Saindo..."
      exit
    }
  } || {
    menu
    }
}

function menu {
  export var1

  VALUE1=""

  VALUE0=$(dialog --ok-label "Criar" --title "Novo Container" --form "Container: $NOMECONTAINER" 10 40 0 \
"Local IP: " 1 1 "$VALUE1" 1 10 20 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

  [ $? -ne 0 ] && exit
  var1=$(echo "$VALUE0" | sed -n 1p)
  
  [ -z "$var1" ] && {
    dialog --title "ERRO" --msgbox "Não deixe nenhum campo vazio!" 8 40
    menu
  } || {
    create
   }
}

function create {
  export var1
  
  mkdir -p /srv/containers/"$NOMECONTAINER"
  touch /srv/containers/"$NOMECONTAINER"/Information
  echo "$var1" > /srv/containers/"$NOMECONTAINER"/Information

docker run -d \
  --name=$NOMECONTAINER \
  --network macvlan \
  --ip=$var1 \
  --dns=1.1.1.1  \
  --dns=127.0.0.1 \
  --no-healthcheck \
  --restart unless-stopped \
  --no-healthcheck \
  -v /etc/localtime:/etc/localtime:ro \
  -v /srv/containers/"$NOMECONTAINER"/data:/var/cache/ntfy \
  -v /srv/containers/"$NOMECONTAINER"/etc:/etc/ntfy \
  -p 80:80 \
  binwiederhier/ntfy \
    serve \
      --cache-file /var/cache/ntfy/cache.db
  }

# Start
checkA
checkB

[ -f "/srv/containers/"$NOMECONTAINER"/etc/server.yml" ] || {
  wget https://raw.githubusercontent.com/urbancompasspony/ntfy_config/main/server.yml -O /srv/containers/$NOMECONTAINER/etc/server.yml
  docker restart $NOMECONTAINER
} && {
 echo "a" > /dev/null
}

unset var1

exit
