#!/bin/bash

# Global config for replication:
export NOMECONTAINER="pentest"

# IP FIXO DO NOVO CONTAINER
export var1
# ntfysh DE DESTINO
export var2
# NOME DO HOSTNAME
export var3
# QUANTIDADE DE TRABALHOS PARALELOS
export var4
# SENHA DO REPOSITORIO!
export var5
# IP DO SERVIDOR FILES WEB
export var6
# USUARIO DO SERVIDOR WEB
export var7
# SENHA DO SERVIDOR WEB
export var8

[ $(arch) = "x86_64" ] && {
  docker logout
  REPOSITORY="registry.gitlab.com/docker329/pentest"
  username="junior.inventor2@gmail.com"
  runa="10"
} || {
  docker logout
  REPOSITORY="urbancompasspony/pandora-arm"
  username="urbancompasspony"
  runa="3"
}

function just_var {
  VALUE1=""
  VALUE2="http://cs.linuxuniverse.com.br:9090"
  VALUE3="$HOSTNAME"
  VALUE4="$runa"
  VALUE5=""
  VALUE6=""
}

function checkA {
  [ "$EUID" -ne 0 ] && {
    echo "Execute esse script como Root!"
    exit
    }
}

function checkB {
  export var1; export var2; export var3; export var4; export var5; export var6; export var7; export var8
  
  [ -f "/srv/containers/$NOMECONTAINER/Information" ] && {
  dialog --title "Dados de $NOMECONTAINER encontrados!" --yesno "Deseja refazer o container?" 6 40
    [ $? = 0 ] && {
    dialog --title "Recriando o container $NOMECONTAINER" --yesno "Deseja reaproveitar os DADOS da instalação anterior?" 6 40
      [ $? = 0 ] && {
        docker stop pentest
        docker rm pentest
        
        docker stop pentapache
        docker rm pentapache
      
        VALUE1=$(sed -n '1p' /srv/containers/$NOMECONTAINER/Information)
        VALUE2=$(sed -n '2p' /srv/containers/$NOMECONTAINER/Information)
        VALUE3=$(sed -n '3p' /srv/containers/$NOMECONTAINER/Information)
        VALUE4=$(sed -n '4p' /srv/containers/$NOMECONTAINER/Information)
        VALUE5=$(sed -n '5p' /srv/containers/$NOMECONTAINER/Information)
        VALUE6=$(sed -n '6p' /srv/containers/$NOMECONTAINER/Information)       
        VALUE7=$(sed -n '7p' /srv/containers/$NOMECONTAINER/Information)
        VALUE8=$(sed -n '8p' /srv/containers/$NOMECONTAINER/Information)
        
        menu
      } || {
        docker stop pentest
        docker rm pentest
        
        docker stop pentapache
        docker rm pentapache
      
        datetime=$(date +"%d-%m %H-%M")
        mkdir -p /srv/containers/.backupcnt
        zip "/srv/containers/.backupcnt/$NOMECONTAINER-$datetime.zip" -r /srv/containers/$NOMECONTAINER

        rm -iR /srv/containers/"$NOMECONTAINER"
      
        just_var
        menu
      }

    } || {     
      echo "A instalação local será mantida! Saindo..."
      exit
    }
    
  } || {
    # Nada encontrado. Vamos criar um novo
    just_var
    menu
  }
}

function menu {
  export var1; export var2; export var3; export var4; export var5; export var6; export var7; export var8

  VALUE0=$(dialog --ok-label "Criar" --title "Novo Container" --form "Container: $NOMECONTAINER \nSe ? = 0 então OFF!" 16 40 0 \
"Local IP:" 1 1 "$VALUE1" 1 10 20 0 \
"? ntfy  :" 2 1 "$VALUE2" 2 10 70 0 \
"Hostname:" 3 1 "$VALUE3" 3 10 20 0 \
"Parallel:" 4 1 "$VALUE4" 4 10 20 0 \
"Repo. PW:" 5 1 "$VALUE5" 5 10 20 0 \
"? Web IP:" 6 1 "$VALUE6" 6 10 20 0 \
"Web User:" 7 1 "$VALUE7" 7 10 20 0 \
"Web Pass:" 8 1 "$VALUE8" 8 10 20 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

  [ $? -ne 0 ] && exit
  var1=$(echo "$VALUE0" | sed -n 1p)
  var2=$(echo "$VALUE0" | sed -n 2p)
  var3=$(echo "$VALUE0" | sed -n 3p)
  var4=$(echo "$VALUE0" | sed -n 4p)
  var5=$(echo "$VALUE0" | sed -n 5p)
  var6=$(echo "$VALUE0" | sed -n 6p)
  var7=$(echo "$VALUE0" | sed -n 7p)
  var8=$(echo "$VALUE0" | sed -n 8p)
  
  [ -z "$var1" ] || [ -z "$var2" ] || [ -z "$var3" ] || [ -z "$var4" ] || [ -z "$var5" ] || [ -z "$var6" ] && {
    dialog --title "ERRO" --msgbox "Não deixe nenhum campo vazio!" 8 40
    menu
  } || {
    [ -z "$var7" ] || [ -z "$var8" ] && {
      dialog --title "ERRO" --msgbox "Não deixe os campos Web User ou Web Pass vazios!" 8 40
      menu
    } || {
      create
    }
  }
}

function create {
  export var1; export var2; export var3; export var4; export var5; export var6; export var7; export var8
  
  mkdir -p /srv/containers/"$NOMECONTAINER"

  touch /srv/containers/"$NOMECONTAINER"/Information
  echo "$var1" > /srv/containers/"$NOMECONTAINER"/Information
  echo "$var2" >> /srv/containers/"$NOMECONTAINER"/Information
  echo "$var3" >> /srv/containers/"$NOMECONTAINER"/Information
  echo "$var4" >> /srv/containers/"$NOMECONTAINER"/Information
  echo "REDIGITE" >> /srv/containers/"$NOMECONTAINER"/Information
  echo "$var6" >> /srv/containers/"$NOMECONTAINER"/Information
  echo "$var7" >> /srv/containers/"$NOMECONTAINER"/Information
  echo "REDIGITE" >> /srv/containers/"$NOMECONTAINER"/Information
  
  mkdir /srv/containers/"$NOMECONTAINER"/Data
  
  touch /srv/containers/"$NOMECONTAINER"/Data/ntfysh
  touch /srv/containers/"$NOMECONTAINER"/Data/runa
  touch /srv/containers/"$NOMECONTAINER"/Data/hostname
  echo "$var2" > /srv/containers/"$NOMECONTAINER"/Data/ntfysh
  echo "$var3" > /srv/containers/"$NOMECONTAINER"/Data/hostname
  echo "$var4" > /srv/containers/"$NOMECONTAINER"/Data/runa

  touch /srv/containers/"$NOMECONTAINER"/Data/webuser
  touch /srv/containers/"$NOMECONTAINER"/Data/webpass
  echo "$var7" > /srv/containers/"$NOMECONTAINER"/Data/webuser
  echo "$var8" > /srv/containers/"$NOMECONTAINER"/Data/webpass
  
  mkdir /srv/containers/"$NOMECONTAINER"/Pentests

[ $(arch) = "x86_64" ] && {
  docker login "$REPOSITORY" -u=$username -p=$var5
} || {
  docker login -u=$username -p=$var5
}

docker run -d \
--name="$NOMECONTAINER" \
--network macvlan \
--ip="$var1" \
--dns=1.1.1.1  \
--dns=127.0.0.1 \
--hostname="$var3" \
--no-healthcheck \
--restart=unless-stopped \
-v /etc/localtime:/etc/localtime:ro \
-v /srv/containers/"$NOMECONTAINER"/Data:/Data \
-v /srv/containers/"$NOMECONTAINER"/Pentests:/Pentests \
$REPOSITORY
}

function checkweb {
  [ "$var6" == "0" ] && {
    echo "The End!" > /dev/null
  } || {
    docker run -d \
    --name=pentapache \
    --network macvlan \
    --ip=$var6 \
    --dns=1.1.1.1  \
    --dns=127.0.0.1 \
    --hostname=httpd \
    --no-healthcheck \
    -v /etc/localtime:/etc/localtime:ro \
    -v /srv/containers/"$NOMECONTAINER"/Data:/Data \
    -v /srv/containers/"$NOMECONTAINER"/Pentests:/usr/local/apache2/htdocs/ \
    --restart=unless-stopped \
    httpd:2.4

    docker exec pentapache apt update
    docker exec pentapache apt install nano wget -y
    docker exec pentapache touch .htpasswd
    docker exec pentapache bash -c "wget https://raw.githubusercontent.com/urbancompasspony/docker/main/Apache2/Password/httpd.conf -O /usr/local/apache2/conf/httpd.conf"
    docker exec pentapache bash -c "htpasswd -c -i .htpasswd $var7 < /Data/webpass"
  
    docker restart pentapache
  }
}

function clean {
  unset var1
  unset var2
  unset var3
  unset var4
  unset var5
  unset var6
  unset var7
  unset var8
}

# Start
checkA
checkB
checkweb
clean

docker logout

exit 1
