#!/bin/bash

# IP FIXO DO NOVO CONTAINER
export var1
# NOME DO COMPARTILHAMENTO E DO CONTAINER!
export var2
# CAMINHO DO DIRETÓRIO DE COMPARTILHAMENTO
export var3
# USUARIO PADRÃO DO COMPARTILHAMENTO
export var4
# SENHA PADRÃO DO COMPARTILHAMENTO
export var5
# PLACA DE REDE A SER USADA
NETWORKLAN="macvlan"

function menu {
  export var1; export var2; export var3; export var4; export var5

  VALUE1="0.0.0.0"; VALUE2="ftp-server"; VALUE3="-v /mnt:/home/vsftpd"; VALUE4="admin"; VALUE5="@#printer2023"

  VALUE0=$(dialog --ok-label "Criar" --title "Novo Container" --form "New FTP Share" 12 35 0 \
"Local IP: " 1 1 "$VALUE1" 1 10 20 0 \
"Shr Name:" 2 1 "$VALUE2" 2 10 20 0 \
"MNT Path:" 3 1 "$VALUE3" 3 10 50 0 \
"UserName:" 4 1 "$VALUE4" 4 10 20 0 \
"PassWord:" 5 1 "$VALUE5" 5 10 20 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

  [ $? -ne 0 ] && exit
  var1=$(echo "$VALUE0" | sed -n 1p)
  var2=$(echo "$VALUE0" | sed -n 2p)
  var3=$(echo "$VALUE0" | sed -n 3p)
  var4=$(echo "$VALUE0" | sed -n 4p)
  var5=$(echo "$VALUE0" | sed -n 5p)
  
  [ -z "$var1" ] || [ -z "$var2" ] || [ -z "$var3" ] || [ -z "$var4" ] || [ -z "$var5" ] && {
    dialog --title "ERRO" --msgbox "Não deixe nenhum campo vazio!" 8 35
    menu
  } || {
    checkB
    }
}

function checkA {
  [ "$EUID" -ne 0 ] && {
    echo "Execute esse script como Root!"
    exit
    }
}

function checkB {
  export var1; export var2; export var3; export var4; export var5

  [ -f "/srv/containers/$var2/Information" ] && {
    dialog --title "Dados de $var2 encontrados!" --yesno "Deseja refazer o container?" 6 40
    [ $? = 0 ] && {
    dialog --title "Recriando o container $var2" --yesno "Deseja reaproveitar os DADOS da instalação anterior?" 6 40
      [ $? = 0 ] && {
        var1=$(sed -n '1p' /srv/containers/$var2/Information)
        var2=$(sed -n '2p' /srv/containers/$var2/Information)
        var3=$(sed -n '3p' /srv/containers/$var2/Information)
		var4=$(sed -n '4p' /srv/containers/$var2/Information)
        var5=$(sed -n '5p' /srv/containers/$var2/Information)

        [ $(docker stop "$var2") ] && {
          docker rm "$var2"

          checkC
        } || {
          checkC
        }
        
      } || {
        docker stop "$var2"
        docker rm "$var2"
        
        datetime=$(date +"%d-%m %H-%M")
        mkdir -p /srv/containers/.backupcnt
        zip "/srv/containers/.backupcnt/$var2-$datetime.zip" -r /srv/containers/$var2
        
        rm -iR /srv/containers/"$var2"

        configfiles
        checkC
        }
    } || {
      echo "A instalação local será mantida! Saindo..."
      exit
    }
  } || {
    checkC
    }
}

function checkC {
  #IPMachine=$(hostname -I | awk '{print $1}')
  MyIP=$(cat /srv/containers/scripts/myip)
  [ "$MyIP" = "$var1" ] && {
    dialog --title "ERRO" --msgbox "Conflito de IP detectado! \nMude para outro IP." 6 40
    menu
  } || {
    create
  }
}

function create {
  docker pull $docker_repo
  export var1; export var2; export var3; export var4; export var5
  
  mkdir -p /srv/containers/"$var2"
  
  touch /srv/containers/"$var2"/Information
  echo "$var1" > /srv/containers/"$var2"/Information
  echo "$var2" >> /srv/containers/"$var2"/Information
  echo "$var3" >> /srv/containers/"$var2"/Information
  echo "$var4" >> /srv/containers/"$var2"/Information
  echo "$var5" >> /srv/containers/"$var2"/Information
  
docker run -d \
--name $var2 \
$var3 \
-e FTP_USER="$var4" \
-e FTP_PASS="$var5" \
-e PASV_ADDRESS="$var1" \
--ip=$var1 \
--dns=1.1.1.1  \
--dns=127.0.0.1 \
--network macvlan \
--hostname=$var2 \
--restart=unless-stopped \
--no-healthcheck \
-p 20:20 \
-p 21:21 \
-p 47400-47470:47400-47470 \
bogem/ftp
}

function clean {
  unset var1
  unset var2
  unset var3
  unset var4
  unset var5
}

# Start
checkA
menu
clean
docker image prune -af
exit 1
