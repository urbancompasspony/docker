#!/bin/bash

# Settings # ================================================================= #

ctrlbkp="/tmp/.ctrlbkp"

ctrlnames="/tmp/.ctrlnames"

backupdir="/srv/backup/"

defaultdir="/srv/containers"

# ============================================================================ #

touch "$ctrlbkp"
touch "$ctrlnames"

function checkA {
  [ "$EUID" -ne 0 ] && {
    echo "Run this script as Root!"
    exit
    }
}

function backup {
  echo "Stopping all containers."
  docker stop $(docker ps -a -q)

  echo "Discovering how many containers there are installed and running."
  contnumber=$(( $(docker ps -a | wc -l) -1 ))

  echo "Generate sequence of the founded number."
  sequence=$(seq -s " " 1 $contnumber)

  echo "Checking if there is a $backupdir"
  mkdir -p "$backupdir"

  echo "Creating a backup of all containers founded."
  for i in $sequence; do
    name=$(docker inspect --format='{{.Name}}' $(docker ps -aq --no-trunc | sed -n "$i"p) | cut -c2-) >> $ctrlnames
    
    [ -f "$backupdir"/"$name".tar ] &&
      echo "An old backup was found. Being deleted..."
      rm "$backupdir"/"$name".tar
    } || {
      echo "No backup founded."
    }  
    
    tar -cvf "$backupdir"/"$name".tar -C "$defaultdir"/"$name" .

    echo "All containers founded:"
    echo $(cat $ctrlnames)
 
    echo "All containers backuped up:"   
    ls $backupdir > $ctrlbkp
    echo $(cat $ctrlbkp)

    echo "Backup completed!"
    
    #echo "Starting all containers."
    #docker start $(docker ps -a -q)
  done
}


function update {
  # Destroy all containers:
  docker rm $(docker ps -aq)

  # Delete all old images:
  docker rmi $(docker images -q)
  docker rmi $(docker images -q --filter "dangling=true")
  
  # Pulling the new ones:
  
}

# All Starts Here!
checkA
backup
update

exit 1
