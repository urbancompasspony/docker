#!/bin/bash

source=$(sed -n '1p' /srv/containers/scripts/config/backupcont)
destiny=$(sed -n '2p' /srv/containers/scripts/config/backupcont)
UUIDD=$(sed -n '3p' /srv/containers/scripts/config/backupcont)
mountpoint=$(sed -n '4p' /srv/containers/scripts/config/backupcont)

#cd "$source"

datetime=$(date +"%d_%m_%y")

function checkA {
  [ "$EUID" -ne 0 ] && {
    echo "Run this script as Root! Exiting..."
    exit
    }
}

function checkB {
disk=$(/bin/mount -U $UUIDD $mountpoint && echo "mounted" || echo "error")
  [ "$disk" = "mounted" ]; then
    dockerctrl stop &&
    checkC
    backup
    dockerctrl start &&
  } || {
    echo "Something happened, exiting..."
    exit
  }
}

function dockerctrl {
  docker "$1" $(docker ps -a -q)
}

function checkC {
  for dir0 in $destiny; do
    # Applying permissions!
    chmod 777 -R "$destiny"

    # Doesn't forget about the SLASH!
    # Delete files older than 3 days
    find "$dir0"/ -type f -mtime +3 -delete
  done
}

function backup {
  for dir1 in $(find /srv/containers/* -maxdepth 0); do
    tar -cvf "$destiny"/"$dir1"-"$datetime".tar "$dir"
  done

  for dir2 in $destiny; do
    rsync -a --delete "$source" "$dir2"
  done
}

# Start Here!
checkA
checkB

exit 1


#not used

# Delete folders older than 3 days
#find "$destiny"/ -type d -mtime +3 -exec rm -rf {} \;

# Delete empty folders
#find "$destiny"/ -type d -empty -delete
